<h1 class="title">Bulletin board</h1>

<% group = ECDSA::Group::Nistp256 %>
<% f = File.open("g_2", "r") %>
<% g_2 = f.read %>
<div style="word-wrap: break-word;" >
<p><%= "x coordinate of g is #{group.generator.x}" %></p>
<p><%= "y coordinate of g is #{group.generator.y}" %></p>
<p><%= "x coordinate of g2 is #{ECDSA::Format::PointOctetString.decode(g_2, group).x}" %></p>
<p><%= "y coordinate of g2 is #{ECDSA::Format::PointOctetString.decode(g_2, group).y}" %></p>
</div>
<% f.close() %>

<!-- https://stackoverflow.com/questions/34975081/create-and-delete-tables-in-responsive-design-ruby-on-rails-4 -->
<%= content_tag :div, class: "big" do %>
<table class="table">
  <thead>
    <tr>
      <th>Hash </th>
      <th>Status</th>
      <th>Big Ri x value </th>
      <th>Big Ri y value </th>
      <th>Big Zi x value </th>
      <th>Big Zi y value </th>
      <th>Vote </th>
      <th>ri </th>
    </tr>
  </thead>

  <tbody>
    <% group = ECDSA::Group::Nistp256 %>
    <% count = 0 %>
    <% big_ri_product = group.infinity %>
    <% big_zi_product = group.infinity %>
    <% @votes.each do |vote| %>
      <tr>
      <% if (vote.status == "confirmed" || vote.status == "audited" )%>  
        <td><%= Digest::SHA256.hexdigest(vote.big_ri.to_s + vote.big_zi.to_s + vote.pwf_c_1.to_s + vote.pwf_c_2.to_s + vote.pwf_r_1.to_s + vote.pwf_r_2.to_s + vote.ri.to_s + vote.vote.to_s).truncate(7) %></td>
        <td><%= vote.status %></td>
        <td><%= (ECDSA::Format::PointOctetString.decode(vote.big_ri, group).x).to_s.truncate(10) %></td>
        <td><%= (ECDSA::Format::PointOctetString.decode(vote.big_ri, group).y).to_s.truncate(10) %></td>
        <td><%= (ECDSA::Format::PointOctetString.decode(vote.big_zi, group).x).to_s.truncate(10) %></td>
        <td><%= (ECDSA::Format::PointOctetString.decode(vote.big_zi, group).y).to_s.truncate(10) %></td>
        <td><%= vote.vote %></td>
        <td><%= vote.ri.to_s.truncate(10) %></td>
        <td><%= link_to 'Receipt', vote %></td>
        <% if vote.status == "confirmed" %>
          <% if count == 0 %>
            <% big_ri_product = ECDSA::Format::PointOctetString.decode(vote.big_ri, group) %>
            <% big_zi_product = ECDSA::Format::PointOctetString.decode(vote.big_zi, group) %>
          <% else %>
            <% big_ri_product = ECDSA::Format::PointOctetString.decode(vote.big_ri, group).add_to_point(big_ri_product) %>
            <% big_zi_product = ECDSA::Format::PointOctetString.decode(vote.big_zi, group).add_to_point(big_zi_product) %>
          <% end %>
          <% count = count + 1 %>
        <% end %>
      </tr>
      <% end %>
    <% end %>
  </tbody>
</table>
<% end %>

<%# https://stackoverflow.com/questions/34975081/create-and-delete-tables-in-responsive-design-ruby-on-rails-4 %>
<%= content_tag :div, class: "small" do %>
    <% group = ECDSA::Group::Nistp256 %>
    <% count = 0 %>
    <% big_ri_product = group.infinity %>
    <% big_zi_product = group.infinity %>
    <% @votes.each do |vote| %>
      <% if (vote.status == "confirmed" || vote.status == "audited" )%>  
        <div class="box">
          <p><%= "Hash: #{Digest::SHA256.hexdigest(vote.big_ri.to_s + vote.big_zi.to_s + vote.pwf_c_1.to_s + vote.pwf_c_2.to_s + vote.pwf_r_1.to_s + vote.pwf_r_2.to_s + vote.ri.to_s + vote.vote.to_s).truncate(7)}" %></p>
          <p><%= "Status: #{vote.status}" %></p>
          <p><%= "Big Ri x value: #{(ECDSA::Format::PointOctetString.decode(vote.big_ri, group).x).to_s.truncate(10)}" %></p>
          <p><%= "Big Ri y value: #{(ECDSA::Format::PointOctetString.decode(vote.big_ri, group).y).to_s.truncate(10)}" %></p>
          <p><%= "Big Zi x value: #{(ECDSA::Format::PointOctetString.decode(vote.big_zi, group).x).to_s.truncate(10)}" %></p>
          <p><%= "Big Zi y value: #{(ECDSA::Format::PointOctetString.decode(vote.big_zi, group).y).to_s.truncate(10)}" %></p>
          <p><%= "Vote: #{vote.vote}" %></p>
          <p><%= "ri: #{vote.ri.to_s.truncate(10)}" %></p>
          <p><%= link_to 'Receipt', vote %></p>
        </div>
        <% if vote.status == "confirmed" %>
          <% if count == 0 %>
            <% big_ri_product = ECDSA::Format::PointOctetString.decode(vote.big_ri, group) %>
            <% big_zi_product = ECDSA::Format::PointOctetString.decode(vote.big_zi, group) %>
          <% else %>
            <% big_ri_product = ECDSA::Format::PointOctetString.decode(vote.big_ri, group).add_to_point(big_ri_product) %>
            <% big_zi_product = ECDSA::Format::PointOctetString.decode(vote.big_zi, group).add_to_point(big_zi_product) %>
          <% end %>
          <% count = count + 1 %>
        <% end %>
      <% end %>
    <% end %>
<% end %>

<br>

<% f = File.open("total_random", "r") %>
<% f2 = File.open("total_votes", "r") %>
<% s = f.read.to_i %>
<% t = f2.read.to_i %>
<div style="word-wrap: break-word;" >
<p><%= "s is #{s}" %></p>
<p><%= "t is #{t}" %></p>
</div>
<% f.close() %>
<% f2.close() %>
<br>
<% vote_user_ids = Array.new %>
<% @votes.each do |vote| %> 
  <% vote_user_ids.push(vote.user_id) %>
<% end %>
<br>
<% if !vote_user_ids.include?(current_user.id) %>
  <%= link_to 'New Vote', new_vote_path, class:'button is-info' %>
<% end %>

<%# https://stackoverflow.com/questions/39069840/rails-link-to-download-file %>
<%= link_to "Download Full Ri and Zi Values as a CSV file", download_path, target: "_blank", class: 'button is-info'%>

<%= link_to 'Tally Verification', new_tallyverification_path,  target: "_blank", class:'button is-info' %>

<%= link_to 'Carry out audit consistency verification on a ballot', new_auditverification_path,  target: "_blank", class:'button is-info' %>

<%= link_to 'Carry out well-formedness verification on a ballot', new_wellformednessverification_path,  target: "_blank", class:'button is-info' %>